class FinalPuzzle
{
	public:
		// default constructor
		FinalPuzzle();
		// constructor
		FinalPuzzle(string solution, string puzzle, int curRings, int ringSNeeded);
		void setFinalPuzzle(string finalPuzzle); // Mutator
		string getFinalPuzzle() const;           // Accessor
		void setFinalSolution(string finalSolution); // Mutator
		string getFinalSolution() const;             // Accessor
		void setTotalRingsNeeded(int totalRings);
		int getTotalRingsNeeded() const;
		void setCurrentRings(int totalRings);
		int getCurrentRings() const;
	private:
		string jumbledWord;
		string correctWord;
		int totalRingsNeeded;
		int ringsFound;
}; // end of class definition
// default constructor
FinalPuzzle::FinalPuzzle()
{
	this->jumbledWord = "etts";
	this->correctWord = "test";
	this->totalRingsNeeded = 4;
	this->ringsFound = 0;
}
// constructor
FinalPuzzle::FinalPuzzle(string solution, string puzzle, int curRings, int ringsNeeded)
{
	this->correctWord = solution;
	this->jumbledWord = puzzle;
	this->ringsFound = curRings;
	this->totalRingsNeeded = ringsNeeded;
}
void FinalPuzzle::setFinalPuzzle(string finalPuzzle)
{
	jumbledWord = finalPuzzle;
	return;
}
string FinalPuzzle::getFinalPuzzle() const
{
	return jumbledWord;
}
void FinalPuzzle::setFinalSolution(string finalSolution)
{
	correctWord = finalSolution;
	return;
}
string FinalPuzzle::getFinalSolution() const
{
	return correctWord;
}
void FinalPuzzle::setTotalRingsNeeded(int totalRings)
{
	totalRingsNeeded = totalRings;
	return;
}
int FinalPuzzle::getTotalRingsNeeded() const
{
	return totalRingsNeeded;
}
void FinalPuzzle::setCurrentRings(int currentRings)
{
	ringsFound = currentRings;
	return;
}
int FinalPuzzle::getCurrentRings() const
{
	return ringsFound;
}; // end class definition
